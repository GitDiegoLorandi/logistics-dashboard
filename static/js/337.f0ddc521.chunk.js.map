{"version":3,"file":"static/js/337.f0ddc521.chunk.js","mappings":"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","sources":["constants/status-colors.js","utils/export-utils.js","components/Deliveries/delivery-table.js","components/UI/badge.js","components/UI/button.js"],"sourcesContent":["/**\r\n * Status color mapping for delivery statuses\r\n * Used across the application to ensure consistent color representation\r\n */\r\n\r\nexport const STATUS_COLORS = {\r\n  // Delivery status colors\r\n  'Delivered': 'text-status-delivered',\r\n  'In Transit': 'text-status-in-transit',\r\n  'Pending': 'text-status-pending',\r\n  'Cancelled': 'text-status-cancelled',\r\n  \r\n  // Deliverer status colors\r\n  'Available': 'text-status-delivered',\r\n  'Busy': 'text-status-pending',\r\n  'Offline': 'text-muted-foreground',\r\n  'On Delivery': 'text-status-in-transit',\r\n  'Off Duty': 'text-muted-foreground',\r\n  'On Break': 'text-info',\r\n};\r\n\r\nexport const STATUS_BADGE_COLORS = {\r\n  // Delivery status badge colors\r\n  'Delivered': 'bg-success/10 text-success',\r\n  'In Transit': 'bg-info/10 text-info',\r\n  'Pending': 'bg-warning/10 text-warning',\r\n  'Cancelled': 'bg-destructive/10 text-destructive',\r\n  \r\n  // Deliverer status badge colors\r\n  'Available': 'bg-success/10 text-success',\r\n  'Busy': 'bg-warning/10 text-warning',\r\n  'Offline': 'bg-muted/10 text-muted-foreground',\r\n  'On Delivery': 'bg-info/10 text-info',\r\n  'Off Duty': 'bg-muted/10 text-muted-foreground',\r\n  'On Break': 'bg-info/10 text-info',\r\n};\r\n\r\n/**\r\n * Get the appropriate color class for a status\r\n * @param {string} status - The status value\r\n * @param {boolean} isBadge - Whether to return badge color classes\r\n * @returns {string} - Tailwind color class\r\n */\r\nexport const getStatusColor = (status, isBadge = false) => {\r\n  if (isBadge) {\r\n    return STATUS_BADGE_COLORS[status] || 'bg-muted/10 text-muted-foreground';\r\n  }\r\n  return STATUS_COLORS[status] || 'text-muted-foreground';\r\n};\r\n\r\nexport default getStatusColor; ","/**\r\n * Utility functions for exporting data to CSV\r\n */\r\n\r\n/**\r\n * Convert an array of objects to CSV format\r\n * @param {Array} data - Array of objects to convert\r\n * @param {Array} headers - Array of header objects with {key, label}\r\n * @returns {string} - CSV formatted string\r\n */\r\nexport const convertToCSV = (data, headers) => {\r\n  if (!data || !data.length) return '';\r\n\r\n  // Create header row\r\n  const headerRow = headers.map(header => `\"${header.label}\"`).join(',');\r\n  \r\n  // Create data rows\r\n  const rows = data.map(item => {\r\n    return headers\r\n      .map(header => {\r\n        const value = item[header.key];\r\n        // Handle different data types and ensure proper CSV formatting\r\n        if (value === null || value === undefined) return '\"\"';\r\n        if (typeof value === 'string') return `\"${value.replace(/\"/g, '\"\"')}\"`;\r\n        if (typeof value === 'object' && value instanceof Date) {\r\n          return `\"${value.toLocaleString()}\"`;\r\n        }\r\n        return `\"${value}\"`;\r\n      })\r\n      .join(',');\r\n  });\r\n\r\n  // Combine header and data rows\r\n  return [headerRow, ...rows].join('\\n');\r\n};\r\n\r\n/**\r\n * Download data as a CSV file\r\n * @param {Array} data - Array of objects to export\r\n * @param {Array} headers - Array of header objects with {key, label}\r\n * @param {string} filename - Name of the file to download\r\n */\r\nexport const exportToCSV = (data, headers, filename) => {\r\n  const csv = convertToCSV(data, headers);\r\n  if (!csv) return;\r\n\r\n  // Create a Blob with the CSV data\r\n  const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\r\n  \r\n  // Create a download link\r\n  const link = document.createElement('a');\r\n  \r\n  // Support for browsers with URL.createObjectURL\r\n  if (navigator.msSaveBlob) {\r\n    // For IE and Edge\r\n    navigator.msSaveBlob(blob, filename);\r\n  } else {\r\n    // For other browsers\r\n    const url = URL.createObjectURL(blob);\r\n    link.href = url;\r\n    link.setAttribute('download', filename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url); // Clean up\r\n  }\r\n}; ","import React, { useMemo } from 'react';\r\nimport { useTable, useSortBy, useFilters, usePagination } from 'react-table';\r\nimport { LucideChevronDown, LucideChevronUp, LucideDownload } from 'lucide-react';\r\nimport { Button } from '../UI/button';\r\nimport { Badge } from '../UI/badge';\r\nimport { getStatusColor } from '../../constants/status-colors';\r\nimport { exportToCSV } from '../../utils/export-utils';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DeliveryTable = ({ deliveries }) => {\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'ID',\r\n        accessor: 'id',\r\n      },\r\n      {\r\n        Header: 'Customer',\r\n        accessor: 'customerName',\r\n      },\r\n      {\r\n        Header: 'Origin',\r\n        accessor: 'origin',\r\n      },\r\n      {\r\n        Header: 'Destination',\r\n        accessor: 'destination',\r\n      },\r\n      {\r\n        Header: 'Status',\r\n        accessor: 'status',\r\n        Cell: ({ value }) => (\r\n          <Badge className={getStatusColor(value, true)}>\r\n            {value}\r\n          </Badge>\r\n        ),\r\n      },\r\n      {\r\n        Header: 'Deliverer',\r\n        accessor: 'delivererName',\r\n      },\r\n      {\r\n        Header: 'Date',\r\n        accessor: 'date',\r\n        Cell: ({ value }) => new Date(value).toLocaleDateString(),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const data = useMemo(() => deliveries, [deliveries]);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    nextPage,\r\n    previousPage,\r\n    state: { pageIndex },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0, pageSize: 10 },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  // Handle CSV export\r\n  const handleExport = () => {\r\n    // Define headers for CSV\r\n    const headers = columns.map(column => ({\r\n      key: column.accessor,\r\n      label: column.Header\r\n    }));\r\n\r\n    // Export data\r\n    exportToCSV(data, headers, 'deliveries.csv');\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <div className=\"mb-4 flex items-center justify-between\">\r\n        <h2 className=\"text-xl font-semibold\">Deliveries</h2>\r\n        <Button \r\n          variant=\"outline\" \r\n          size=\"sm\" \r\n          onClick={handleExport}\r\n          className=\"flex items-center gap-2\"\r\n        >\r\n          <LucideDownload className=\"h-4 w-4\" />\r\n          Export CSV\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"rounded-md border\">\r\n        <table {...getTableProps()} className=\"w-full text-sm\">\r\n          <thead className=\"bg-muted/50\">\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()} key={headerGroup.id}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th\r\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                    key={column.id}\r\n                    className=\"px-4 py-3 text-left font-medium text-muted-foreground\"\r\n                  >\r\n                    <div className=\"flex items-center gap-1\">\r\n                      {column.render('Header')}\r\n                      <span>\r\n                        {column.isSorted ? (\r\n                          column.isSortedDesc ? (\r\n                            <LucideChevronDown className=\"h-4 w-4\" />\r\n                          ) : (\r\n                            <LucideChevronUp className=\"h-4 w-4\" />\r\n                          )\r\n                        ) : null}\r\n                      </span>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {page.map(row => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()} key={row.id} className=\"border-t hover:bg-muted/50\">\r\n                  {row.cells.map(cell => (\r\n                    <td {...cell.getCellProps()} key={cell.column.id} className=\"px-4 py-3\">\r\n                      {cell.render('Cell')}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div className=\"mt-4 flex items-center justify-between\">\r\n        <div className=\"text-sm text-muted-foreground\">\r\n          Page {pageIndex + 1} of {pageOptions.length}\r\n        </div>\r\n        <div className=\"flex items-center gap-2\">\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={() => previousPage()}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            Previous\r\n          </Button>\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={() => nextPage()}\r\n            disabled={!canNextPage}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDeliveryTable.propTypes = {\r\n  deliveries: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      customerName: PropTypes.string,\r\n      origin: PropTypes.string,\r\n      destination: PropTypes.string,\r\n      status: PropTypes.string,\r\n      delivererName: PropTypes.string,\r\n      date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)])\r\n    })\r\n  ).isRequired\r\n};\r\n\r\nexport default DeliveryTable; ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Badge component for status indicators\r\n */\r\nconst Badge = ({ variant = 'default', className = '', children, ...props }) => {\r\n  // Badge variants\r\n  const variants = {\r\n    default: 'bg-primary text-primary-foreground hover:bg-primary/80',\r\n    secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\r\n    destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/80',\r\n    outline: 'text-foreground border border-input hover:bg-accent hover:text-accent-foreground',\r\n    success: 'bg-green-500 text-white hover:bg-green-600',\r\n    warning: 'bg-yellow-500 text-white hover:bg-yellow-600',\r\n    info: 'bg-blue-500 text-white hover:bg-blue-600',\r\n    pending: 'bg-yellow-500 text-white hover:bg-yellow-600',\r\n    inProgress: 'bg-blue-500 text-white hover:bg-blue-600',\r\n    completed: 'bg-green-500 text-white hover:bg-green-600',\r\n    cancelled: 'bg-gray-500 text-white hover:bg-gray-600',\r\n    delayed: 'bg-orange-500 text-white hover:bg-orange-600',\r\n    onHold: 'bg-purple-500 text-white hover:bg-purple-600',\r\n    // Delivery status badges\r\n    PENDING: 'bg-yellow-500 text-white hover:bg-yellow-600',\r\n    IN_TRANSIT: 'bg-blue-500 text-white hover:bg-blue-600',\r\n    DELIVERED: 'bg-green-500 text-white hover:bg-green-600',\r\n    CANCELLED: 'bg-gray-500 text-white hover:bg-gray-600',\r\n    DELAYED: 'bg-orange-500 text-white hover:bg-orange-600',\r\n    ON_HOLD: 'bg-purple-500 text-white hover:bg-purple-600',\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 ${variants[variant] || variants.default} ${className}`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nBadge.propTypes = {\r\n  variant: PropTypes.oneOf([\r\n    'default',\r\n    'secondary',\r\n    'destructive',\r\n    'outline',\r\n    'success',\r\n    'warning',\r\n    'info',\r\n    'pending',\r\n    'inProgress',\r\n    'completed',\r\n    'cancelled',\r\n    'delayed',\r\n    'onHold',\r\n    'PENDING',\r\n    'IN_TRANSIT',\r\n    'DELIVERED',\r\n    'CANCELLED',\r\n    'DELAYED',\r\n    'ON_HOLD',\r\n  ]),\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport { Badge }; ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Button component with various variants and sizes\r\n */\r\nconst Button = React.forwardRef(({\r\n  className = '',\r\n  variant = 'default',\r\n  size = 'default',\r\n  children,\r\n  isLoading = false,\r\n  startIcon,\r\n  endIcon,\r\n  gradient = false,\r\n  ...props\r\n}, ref) => {\r\n  // Button variants - updated with CSS variables and gradients\r\n  const variants = {\r\n    default: gradient \r\n      ? 'bg-gradient-to-r from-[var(--color-primary)] to-[var(--color-primary-dark)] text-white hover:shadow-[var(--shadow-md)] hover:-translate-y-0.5' \r\n      : 'bg-[var(--color-primary)] text-white hover:bg-[var(--color-primary-dark)] hover:shadow-[var(--shadow-md)]',\r\n    destructive: gradient \r\n      ? 'bg-gradient-to-r from-[var(--color-error)] to-[#b91c1c] text-white hover:shadow-[var(--shadow-md)] hover:-translate-y-0.5' \r\n      : 'bg-[var(--color-error)] text-white hover:bg-opacity-90 hover:shadow-[var(--shadow-md)]',\r\n    outline: 'border border-[var(--color-border)] bg-transparent text-[var(--text-primary)] hover:bg-[var(--input-bg)] hover:border-[var(--color-primary-light)]',\r\n    secondary: gradient \r\n      ? 'bg-gradient-to-r from-[var(--color-secondary)] to-[var(--color-secondary-dark)] text-white hover:shadow-[var(--shadow-md)] hover:-translate-y-0.5' \r\n      : 'bg-[var(--color-secondary)] text-white hover:bg-[var(--color-secondary-dark)] hover:shadow-[var(--shadow-md)]',\r\n    accent: gradient \r\n      ? 'bg-gradient-to-r from-[var(--color-accent)] to-[var(--color-accent-dark)] text-white hover:shadow-[var(--shadow-md)] hover:-translate-y-0.5' \r\n      : 'bg-[var(--color-accent)] text-white hover:bg-[var(--color-accent-dark)] hover:shadow-[var(--shadow-md)]',\r\n    ghost: 'hover:bg-[var(--input-bg)] text-[var(--text-primary)]',\r\n    link: 'text-[var(--color-primary)] underline-offset-4 hover:underline hover:text-[var(--color-primary-light)]',\r\n  };\r\n\r\n  // Button sizes\r\n  const sizes = {\r\n    default: 'h-10 px-4 py-2',\r\n    sm: 'h-9 rounded-md px-3 text-sm',\r\n    lg: 'h-11 rounded-md px-8 text-lg',\r\n    icon: 'h-10 w-10',\r\n  };\r\n\r\n  // Base classes - enhanced with transitions and focus states\r\n  const baseClasses = 'relative inline-flex items-center justify-center rounded-md font-medium transition-all duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--color-primary)] focus-visible:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed shadow-[var(--shadow-sm)]';\r\n\r\n  return (\r\n    <button\r\n      className={`${baseClasses} ${variants[variant]} ${sizes[size]} ${className}`}\r\n      ref={ref}\r\n      disabled={isLoading || props.disabled}\r\n      {...props}\r\n    >\r\n      {isLoading && (\r\n        <span className=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2\">\r\n          <svg className=\"animate-spin h-5 w-5\" viewBox=\"0 0 24 24\">\r\n            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" fill=\"none\"></circle>\r\n            <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n          </svg>\r\n        </span>\r\n      )}\r\n      <span className={isLoading ? \"invisible\" : \"flex items-center gap-2\"}>\r\n        {startIcon && <span className=\"mr-1\">{startIcon}</span>}\r\n        {children}\r\n        {endIcon && <span className=\"ml-1\">{endIcon}</span>}\r\n      </span>\r\n    </button>\r\n  );\r\n});\r\n\r\nButton.displayName = 'Button';\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string,\r\n  variant: PropTypes.oneOf(['default', 'destructive', 'outline', 'secondary', 'accent', 'ghost', 'link']),\r\n  size: PropTypes.oneOf(['default', 'sm', 'lg', 'icon']),\r\n  children: PropTypes.node,\r\n  isLoading: PropTypes.bool,\r\n  startIcon: PropTypes.node,\r\n  endIcon: PropTypes.node,\r\n  gradient: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport { Button }; "],"names":["STATUS_COLORS","STATUS_BADGE_COLORS","getStatusColor","status","arguments","length","undefined","exportToCSV","data","headers","filename","csv","convertToCSV","map","header","label","join","item","value","key","replace","Date","toLocaleString","blob","Blob","type","link","document","createElement","navigator","msSaveBlob","url","URL","createObjectURL","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","_ref","deliveries","columns","useMemo","Header","accessor","Cell","_ref2","_jsx","Badge","className","children","_ref3","toLocaleDateString","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","nextPage","previousPage","state","pageIndex","useTable","initialState","pageSize","useFilters","useSortBy","usePagination","_jsxs","Button","variant","size","onClick","handleExport","column","LucideDownload","headerGroup","_createElement","getHeaderGroupProps","id","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","LucideChevronDown","LucideChevronUp","row","getRowProps","cells","cell","getCellProps","disabled","props","variants","default","secondary","destructive","outline","success","warning","info","pending","inProgress","completed","cancelled","delayed","onHold","PENDING","IN_TRANSIT","DELIVERED","CANCELLED","DELAYED","ON_HOLD","React","ref","isLoading","startIcon","endIcon","gradient","accent","ghost","sm","lg","icon","viewBox","cx","cy","r","stroke","strokeWidth","fill","d","displayName"],"sourceRoot":""}
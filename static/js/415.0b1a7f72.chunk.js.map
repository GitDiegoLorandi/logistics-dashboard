{"version":3,"file":"static/js/415.0b1a7f72.chunk.js","mappings":"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","sources":["components/UI/data-visualization/charts/line-chart.js","components/UI/data-visualization/charts/pie-chart.js","components/Dashboard/dashboard-overview.js","components/UI/button.js","components/UI/card.js","services/api.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  LineChart as RechartsLineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\n\r\n/**\r\n * LineChart component for visualizing data\r\n * \r\n * @param {Object} props - Component props\r\n * @param {Array} props.data - Data to visualize\r\n * @param {Array} props.lines - Line configurations\r\n * @param {string} props.xAxisDataKey - Data key for the X axis\r\n * @param {string} props.yAxisLabel - Label for the Y axis\r\n * @param {string} props.xAxisLabel - Label for the X axis\r\n * @param {string} props.title - Chart title\r\n * @param {boolean} props.connectNulls - Whether to connect lines over null values\r\n * @param {boolean} props.showGrid - Whether to show the grid\r\n * @param {string} props.className - Additional CSS classes\r\n */\r\nconst LineChart = ({\r\n  data = [],\r\n  lines = [],\r\n  xAxisDataKey = 'name',\r\n  yAxisLabel,\r\n  xAxisLabel,\r\n  title,\r\n  connectNulls = false,\r\n  showGrid = true,\r\n  className,\r\n}) => {\r\n  // Default colors if not provided in lines config\r\n  const defaultColors = [\r\n    '#3b82f6', // blue-500\r\n    '#10b981', // emerald-500\r\n    '#f59e0b', // amber-500\r\n    '#ef4444', // red-500\r\n    '#8b5cf6', // violet-500\r\n    '#ec4899', // pink-500\r\n    '#06b6d4', // cyan-500\r\n  ];\r\n\r\n  // Ensure lines have colors\r\n  const linesWithColors = lines.map((line, index) => ({\r\n    ...line,\r\n    color: line.color || defaultColors[index % defaultColors.length],\r\n    type: line.type || 'monotone',\r\n    strokeWidth: line.strokeWidth || 2,\r\n    dot: line.dot !== undefined ? line.dot : true,\r\n  }));\r\n\r\n  return (\r\n    <div className={`w-full ${className || ''}`}>\r\n      {title && (\r\n        <h3 className=\"mb-4 text-lg font-semibold\">{title}</h3>\r\n      )}\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <RechartsLineChart\r\n          data={data}\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: 40,\r\n            bottom: 40,\r\n          }}\r\n        >\r\n          {showGrid && (\r\n            <CartesianGrid strokeDasharray=\"3 3\" opacity={0.3} />\r\n          )}\r\n          <XAxis \r\n            dataKey={xAxisDataKey} \r\n            label={xAxisLabel ? { value: xAxisLabel, position: 'insideBottom', offset: -10 } : null} \r\n          />\r\n          <YAxis \r\n            label={yAxisLabel ? { value: yAxisLabel, angle: -90, position: 'insideLeft' } : null} \r\n          />\r\n          <Tooltip \r\n            contentStyle={{ \r\n              backgroundColor: 'rgba(255, 255, 255, 0.9)', \r\n              borderRadius: '6px',\r\n              boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\r\n              border: '1px solid rgba(0, 0, 0, 0.1)',\r\n            }} \r\n          />\r\n          <Legend />\r\n          {linesWithColors.map((line) => (\r\n            <Line\r\n              key={line.dataKey}\r\n              type={line.type}\r\n              dataKey={line.dataKey}\r\n              name={line.name || line.dataKey}\r\n              stroke={line.color}\r\n              strokeWidth={line.strokeWidth}\r\n              dot={line.dot}\r\n              activeDot={{ r: 6 }}\r\n              connectNulls={connectNulls}\r\n            />\r\n          ))}\r\n        </RechartsLineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChart; ","import React from 'react';\r\nimport {\r\n  PieChart as RechartsPieChart,\r\n  Pie,\r\n  Cell,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\n\r\n/**\r\n * PieChart component for visualizing data\r\n * \r\n * @param {Object} props - Component props\r\n * @param {Array} props.data - Data to visualize\r\n * @param {string} props.dataKey - Data key for the values\r\n * @param {string} props.nameKey - Data key for the names\r\n * @param {Array} props.colors - Colors for the pie slices\r\n * @param {string} props.title - Chart title\r\n * @param {boolean} props.donut - Whether to render as a donut chart\r\n * @param {number} props.innerRadius - Inner radius for donut charts\r\n * @param {number} props.outerRadius - Outer radius for the chart\r\n * @param {string} props.className - Additional CSS classes\r\n */\r\nconst PieChart = ({\r\n  data = [],\r\n  dataKey = 'value',\r\n  nameKey = 'name',\r\n  colors,\r\n  title,\r\n  donut = false,\r\n  innerRadius = 60,\r\n  outerRadius = 80,\r\n  className,\r\n}) => {\r\n  // Default colors if not provided\r\n  const defaultColors = [\r\n    '#3b82f6', // blue-500\r\n    '#10b981', // emerald-500\r\n    '#f59e0b', // amber-500\r\n    '#ef4444', // red-500\r\n    '#8b5cf6', // violet-500\r\n    '#ec4899', // pink-500\r\n    '#06b6d4', // cyan-500\r\n    '#f43f5e', // rose-500\r\n    '#14b8a6', // teal-500\r\n    '#8b5cf6', // violet-500\r\n  ];\r\n\r\n  // Use provided colors or defaults\r\n  const pieColors = colors || defaultColors;\r\n\r\n  return (\r\n    <div className={`w-full ${className || ''}`}>\r\n      {title && (\r\n        <h3 className=\"mb-4 text-lg font-semibold\">{title}</h3>\r\n      )}\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <RechartsPieChart\r\n          margin={{\r\n            top: 20,\r\n            right: 30,\r\n            left: 30,\r\n            bottom: 20,\r\n          }}\r\n        >\r\n          <Pie\r\n            data={data}\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            labelLine={true}\r\n            label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\r\n            outerRadius={outerRadius}\r\n            innerRadius={donut ? innerRadius : 0}\r\n            fill=\"#8884d8\"\r\n            dataKey={dataKey}\r\n            nameKey={nameKey}\r\n          >\r\n            {data.map((entry, index) => (\r\n              <Cell \r\n                key={`cell-${index}`} \r\n                fill={pieColors[index % pieColors.length]} \r\n              />\r\n            ))}\r\n          </Pie>\r\n          <Tooltip \r\n            formatter={(value) => value}\r\n            contentStyle={{ \r\n              backgroundColor: 'rgba(255, 255, 255, 0.9)', \r\n              borderRadius: '6px',\r\n              boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\r\n              border: '1px solid rgba(0, 0, 0, 0.1)',\r\n            }} \r\n          />\r\n          <Legend />\r\n        </RechartsPieChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChart; ","import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { \r\n  Package, \r\n  TrendingUp, \r\n  Clock, \r\n  CheckCircle, \r\n  AlertTriangle, \r\n  Calendar, \r\n  Users, \r\n  Truck,\r\n  RefreshCw,\r\n  ArrowUp,\r\n  ArrowDown\r\n} from 'lucide-react';\r\nimport { motion } from 'framer-motion';\r\nimport { deliveryAPI, userAPI, delivererAPI } from '../../services/api';\r\nimport ResponsiveChartCard from '../UI/data-visualization/charts/responsive-chart-card';\r\nimport { LineChart, PieChart } from '../UI/data-visualization/charts';\r\nimport { Button } from '../UI/button';\r\nimport { Card, CardHeader, CardContent } from '../UI/card';\r\n\r\n/**\r\n * Dashboard overview component\r\n */\r\nconst DashboardOverview = () => {\r\n  const { t } = useTranslation(['dashboard', 'common', 'navigation']);\r\n  const [stats, setStats] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchDashboardData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      console.log('Fetching dashboard data from APIs...');\r\n      \r\n      // Fetch data from multiple APIs\r\n      const [deliveriesData, deliverersData, usersData] = await Promise.all([\r\n        deliveryAPI.getAll(),\r\n        delivererAPI.getAll(),\r\n        userAPI.getProfile().catch(() => null)\r\n      ]);\r\n\r\n      // Process deliveries data\r\n      const deliveriesArray = deliveriesData?.docs || [];\r\n      const delivered = deliveriesArray.filter(d => d.status === 'Delivered').length;\r\n      const pending = deliveriesArray.filter(d => d.status === 'Pending').length;\r\n      const inTransit = deliveriesArray.filter(d => d.status === 'In Transit').length;\r\n      const cancelled = deliveriesArray.filter(d => d.status === 'Cancelled').length;\r\n      \r\n      // Create status breakdown for pie chart\r\n      const byStatus = [\r\n        { name: 'Delivered', value: delivered },\r\n        { name: 'Pending', value: pending },\r\n        { name: 'In Transit', value: inTransit },\r\n        { name: 'Cancelled', value: cancelled }\r\n      ].filter(item => item.value > 0);\r\n\r\n      // Create trends data - last 7 days\r\n      const sevenDaysAgo = new Date();\r\n      sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\r\n      \r\n      // Group by date to create trend data\r\n      const trendData = [];\r\n      const dateMap = new Map();\r\n      \r\n      deliveriesArray.forEach(delivery => {\r\n        const date = new Date(delivery.createdAt || delivery.created_at || Date.now()).toISOString().split('T')[0];\r\n        if (!dateMap.has(date)) {\r\n          dateMap.set(date, { date, completed: 0, pending: 0 });\r\n        }\r\n        \r\n        if (delivery.status === 'Delivered') {\r\n          dateMap.get(date).completed += 1;\r\n        } else if (delivery.status === 'Pending' || delivery.status === 'In Transit') {\r\n          dateMap.get(date).pending += 1;\r\n        }\r\n      });\r\n      \r\n      // Convert to array and sort by date\r\n      const trendsArray = Array.from(dateMap.values())\r\n        .sort((a, b) => new Date(a.date) - new Date(b.date))\r\n        .slice(-7); // Only take the last 7 days\r\n\r\n      // Calculate on-time delivery rate\r\n      const totalDelivered = delivered;\r\n      const onTimeDeliveries = deliveriesArray.filter(\r\n        d => d.status === 'Delivered' && new Date(d.deliveredAt || d.delivered_at) <= new Date(d.expectedDeliveryDate || d.expected_delivery_date)\r\n      ).length;\r\n      const onTimeRate = totalDelivered > 0 ? Math.round((onTimeDeliveries / totalDelivered) * 100) : 0;\r\n\r\n      // Process user data\r\n      const userInfo = usersData || { role: 'unknown' };\r\n      \r\n      // Create dashboard data structure\r\n      const dashboardData = {\r\n        deliveries: {\r\n          total: deliveriesArray.length,\r\n          pending: pending,\r\n          inTransit: inTransit,\r\n          completed: delivered,\r\n          failed: cancelled,\r\n          byStatus: byStatus,\r\n          trends: trendsArray.length > 0 ? trendsArray : [\r\n            { date: new Date().toISOString().split('T')[0], completed: 0, pending: 0 }\r\n          ]\r\n        },\r\n        deliverers: {\r\n          total: Array.isArray(deliverersData) ? deliverersData.length : 0,\r\n          active: Array.isArray(deliverersData) ? deliverersData.filter(d => d.status === 'active' || d.status === 'Active').length : 0,\r\n          inactive: Array.isArray(deliverersData) ? deliverersData.filter(d => d.status !== 'active' && d.status !== 'Active').length : 0,\r\n          onDelivery: Array.isArray(deliverersData) ? deliverersData.filter(d => d.currentDelivery || d.current_delivery).length : 0\r\n        },\r\n        users: {\r\n          total: userInfo ? 1 : 0,\r\n          admins: userInfo.role === 'admin' ? 1 : 0,\r\n          managers: userInfo.role === 'manager' ? 1 : 0,\r\n          operators: userInfo.role === 'user' ? 1 : 0\r\n        },\r\n        performance: {\r\n          onTimeDeliveryRate: onTimeRate,\r\n          averageDeliveryTime: 0, // Not calculated yet\r\n          customerSatisfaction: 0 // Not available yet\r\n        }\r\n      };\r\n      \r\n      console.log('Dashboard data processed:', dashboardData);\r\n      setStats(dashboardData);\r\n    } catch (err) {\r\n      console.error('Error loading dashboard data:', err);\r\n      setError(err.message || 'Failed to load dashboard data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDashboardData();\r\n  }, []);\r\n\r\n  // Handle retry on error\r\n  const handleRetry = () => {\r\n    fetchDashboardData();\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex h-full items-center justify-center\">\r\n        <div className=\"h-16 w-16 animate-spin rounded-full border-4 border-[var(--color-primary)] border-t-transparent shadow-lg\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error && !stats) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center space-y-4 p-8 text-center\">\r\n        <div className=\"rounded-full bg-amber-100 p-4 dark:bg-amber-900\">\r\n          <AlertTriangle className=\"h-12 w-12 text-amber-500\" />\r\n        </div>\r\n        <h3 className=\"text-xl font-bold\">{t('dataLoadingError')}</h3>\r\n        <p className=\"text-[var(--text-secondary)]\">{error}</p>\r\n        <Button \r\n          onClick={handleRetry} \r\n          className=\"mt-4 flex items-center gap-2\"\r\n          variant=\"accent\"\r\n          gradient={true}\r\n        >\r\n          <RefreshCw className=\"h-4 w-4\" />\r\n          {t('common:retry')}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If we reach this point, stats should be available\r\n  // But we'll add a safety check just in case\r\n  if (!stats) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center space-y-4 p-8 text-center\">\r\n        <div className=\"rounded-full bg-red-100 p-4 dark:bg-red-900\">\r\n          <AlertTriangle className=\"h-12 w-12 text-red-500\" />\r\n        </div>\r\n        <h3 className=\"text-xl font-bold\">{t('noDataAvailable')}</h3>\r\n        <Button \r\n          onClick={handleRetry} \r\n          className=\"mt-4 flex items-center gap-2\"\r\n          variant=\"accent\"\r\n          gradient={true}\r\n        >\r\n          <RefreshCw className=\"h-4 w-4\" />\r\n          {t('common:retry')}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const { deliveries, deliverers, users, performance } = stats;\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between bg-gradient-to-r from-[var(--color-primary-light)] to-[var(--color-primary)] p-4 rounded-lg text-white shadow-[var(--shadow-md)]\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold tracking-tight\">{t('title')}</h1>\r\n          <p className=\"opacity-90\">{t('summary')}</p>\r\n        </div>\r\n        <Button\r\n          variant=\"outline\"\r\n          size=\"sm\"\r\n          onClick={handleRetry}\r\n          className=\"flex items-center gap-2 bg-white/20 backdrop-blur-sm border-white/40 hover:bg-white/30 text-white\"\r\n        >\r\n          <RefreshCw className=\"h-4 w-4\" />\r\n          {t('common:refresh')}\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Stats cards */}\r\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n        <AnimatedStatCard \r\n          title={t('deliveriesTotal')}\r\n          value={deliveries.total}\r\n          icon={<Package className=\"h-5 w-5\" />}\r\n          delay={0}\r\n          gradient=\"from-blue-500 to-blue-700\"\r\n          textColor=\"text-white\"\r\n        />\r\n        <AnimatedStatCard \r\n          title={t('deliveriesPending')}\r\n          value={deliveries.pending}\r\n          icon={<Clock className=\"h-5 w-5\" />}\r\n          delay={0.1}\r\n          gradient=\"from-amber-500 to-amber-700\"\r\n          textColor=\"text-white\"\r\n        />\r\n        <AnimatedStatCard \r\n          title={t('deliveriesCompleted')}\r\n          value={deliveries.completed}\r\n          icon={<CheckCircle className=\"h-5 w-5\" />}\r\n          delay={0.2}\r\n          gradient=\"from-green-500 to-green-700\"\r\n          textColor=\"text-white\"\r\n        />\r\n        <AnimatedStatCard \r\n          title={t('deliveriesFailed')}\r\n          value={deliveries.failed}\r\n          icon={<AlertTriangle className=\"h-5 w-5\" />}\r\n          delay={0.3}\r\n          gradient=\"from-red-500 to-red-700\"\r\n          textColor=\"text-white\"\r\n        />\r\n      </div>\r\n\r\n      {/* Performance Indicators */}\r\n      <div className=\"grid gap-4 md:grid-cols-3\">\r\n        <PerformanceCard\r\n          title={t('onTimeRate')}\r\n          value={`${performance.onTimeDeliveryRate}%`}\r\n          icon={<TrendingUp className=\"h-5 w-5\" />}\r\n          trend={performance.onTimeDeliveryRate > 80 ? 'up' : 'down'}\r\n          trendValue=\"+5%\"\r\n          gradient=\"from-purple-500 to-indigo-600\"\r\n        />\r\n        <PerformanceCard\r\n          title={t('activeDeliverers')}\r\n          value={`${deliverers.active}/${deliverers.total}`}\r\n          icon={<Truck className=\"h-5 w-5\" />}\r\n          trend=\"up\"\r\n          trendValue=\"+2\"\r\n          gradient=\"from-cyan-500 to-blue-600\"\r\n        />\r\n        <PerformanceCard\r\n          title={t('userActivity')}\r\n          value={users.total}\r\n          icon={<Users className=\"h-5 w-5\" />}\r\n          trend=\"up\"\r\n          trendValue=\"+3\"\r\n          gradient=\"from-emerald-500 to-teal-600\"\r\n        />\r\n      </div>\r\n\r\n      {/* Charts */}\r\n      <div className=\"grid gap-4 md:grid-cols-2\">\r\n        {deliveries.trends && deliveries.trends.length > 0 ? (\r\n          <Card variant=\"default\" className=\"shadow-[var(--shadow-lg)]\" animate={true}>\r\n            <CardHeader title={t('deliveryTrends')} subtitle={t('chartLabels.dailyDeliveryTrends')} gradient={true} />\r\n            <CardContent>\r\n              <LineChart \r\n                data={deliveries.trends}\r\n                lines={[\r\n                  { dataKey: 'completed', name: t('chartLabels.completed'), color: 'var(--color-success)' },\r\n                  { dataKey: 'pending', name: t('chartLabels.pending'), color: 'var(--color-warning)' }\r\n                ]}\r\n                xAxisDataKey=\"date\"\r\n                grid={true}\r\n                animated={true}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n        ) : (\r\n          <Card variant=\"default\" className=\"shadow-[var(--shadow-lg)]\">\r\n            <CardHeader title={t('deliveryTrends')} />\r\n            <CardContent className=\"flex items-center justify-center p-12\">\r\n              <p className=\"text-[var(--text-secondary)]\">{t('noChartData')}</p>\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n\r\n        {deliveries.byStatus && deliveries.byStatus.length > 0 ? (\r\n          <Card variant=\"default\" className=\"shadow-[var(--shadow-lg)]\" animate={true}>\r\n            <CardHeader title={t('deliveryStatus')} subtitle={t('chartLabels.deliveryStatusBreakdown')} gradient={true} />\r\n            <CardContent>\r\n              <PieChart \r\n                data={deliveries.byStatus}\r\n                nameKey=\"name\"\r\n                dataKey=\"value\"\r\n                colors={['var(--color-success)', 'var(--color-warning)', 'var(--color-info)', 'var(--color-error)']}\r\n                animated={true}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n        ) : (\r\n          <Card variant=\"default\" className=\"shadow-[var(--shadow-lg)]\">\r\n            <CardHeader title={t('deliveryStatus')} />\r\n            <CardContent className=\"flex items-center justify-center p-12\">\r\n              <p className=\"text-[var(--text-secondary)]\">{t('noChartData')}</p>\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Animated stat card component with motion effects\r\nconst AnimatedStatCard = ({ title, value, icon, delay = 0, gradient, textColor = 'text-white' }) => (\r\n  <motion.div\r\n    initial={{ opacity: 0, y: 20 }}\r\n    animate={{ opacity: 1, y: 0 }}\r\n    transition={{ duration: 0.3, delay }}\r\n    className={`rounded-lg bg-gradient-to-br ${gradient} p-6 shadow-[var(--shadow-lg)] hover:shadow-[var(--shadow-xl)] transition-all duration-300 hover:-translate-y-1 ${textColor}`}\r\n  >\r\n    <div className=\"flex items-center justify-between\">\r\n      <div className=\"rounded-full bg-white/20 p-2 backdrop-blur-sm\">\r\n        {icon}\r\n      </div>\r\n      <span className=\"text-3xl font-bold\">{value}</span>\r\n    </div>\r\n    <div className=\"mt-2 text-sm font-medium opacity-90\">{title}</div>\r\n  </motion.div>\r\n);\r\n\r\n// Performance card with trend indicator\r\nconst PerformanceCard = ({ title, value, icon, trend, trendValue, gradient }) => (\r\n  <motion.div\r\n    initial={{ opacity: 0, y: 20 }}\r\n    animate={{ opacity: 1, y: 0 }}\r\n    transition={{ duration: 0.3, delay: 0.4 }}\r\n    className={`rounded-lg bg-gradient-to-br ${gradient} p-6 shadow-[var(--shadow-lg)] text-white`}\r\n  >\r\n    <div className=\"flex items-center justify-between\">\r\n      <div className=\"rounded-full bg-white/20 p-2 backdrop-blur-sm\">\r\n        {icon}\r\n      </div>\r\n      <div className=\"flex items-center gap-2\">\r\n        <span className=\"text-2xl font-bold\">{value}</span>\r\n        <div className={`flex items-center ${trend === 'up' ? 'text-green-300' : 'text-red-300'}`}>\r\n          {trend === 'up' ? <ArrowUp className=\"h-4 w-4\" /> : <ArrowDown className=\"h-4 w-4\" />}\r\n          <span className=\"text-xs font-medium\">{trendValue}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"mt-2 text-sm font-medium opacity-90\">{title}</div>\r\n  </motion.div>\r\n);\r\n\r\nexport default DashboardOverview;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Button component with various variants and sizes\r\n */\r\nconst Button = React.forwardRef(({\r\n  className = '',\r\n  variant = 'default',\r\n  size = 'default',\r\n  children,\r\n  isLoading = false,\r\n  startIcon,\r\n  endIcon,\r\n  gradient = false,\r\n  ...props\r\n}, ref) => {\r\n  // Button variants - updated with CSS variables and gradients\r\n  const variants = {\r\n    default: gradient \r\n      ? 'bg-gradient-to-r from-[var(--color-primary)] to-[var(--color-primary-dark)] text-white hover:shadow-[var(--shadow-md)] hover:-translate-y-0.5' \r\n      : 'bg-[var(--color-primary)] text-white hover:bg-[var(--color-primary-dark)] hover:shadow-[var(--shadow-md)]',\r\n    destructive: gradient \r\n      ? 'bg-gradient-to-r from-[var(--color-error)] to-[#b91c1c] text-white hover:shadow-[var(--shadow-md)] hover:-translate-y-0.5' \r\n      : 'bg-[var(--color-error)] text-white hover:bg-opacity-90 hover:shadow-[var(--shadow-md)]',\r\n    outline: 'border border-[var(--color-border)] bg-transparent text-[var(--text-primary)] hover:bg-[var(--input-bg)] hover:border-[var(--color-primary-light)]',\r\n    secondary: gradient \r\n      ? 'bg-gradient-to-r from-[var(--color-secondary)] to-[var(--color-secondary-dark)] text-white hover:shadow-[var(--shadow-md)] hover:-translate-y-0.5' \r\n      : 'bg-[var(--color-secondary)] text-white hover:bg-[var(--color-secondary-dark)] hover:shadow-[var(--shadow-md)]',\r\n    accent: gradient \r\n      ? 'bg-gradient-to-r from-[var(--color-accent)] to-[var(--color-accent-dark)] text-white hover:shadow-[var(--shadow-md)] hover:-translate-y-0.5' \r\n      : 'bg-[var(--color-accent)] text-white hover:bg-[var(--color-accent-dark)] hover:shadow-[var(--shadow-md)]',\r\n    ghost: 'hover:bg-[var(--input-bg)] text-[var(--text-primary)]',\r\n    link: 'text-[var(--color-primary)] underline-offset-4 hover:underline hover:text-[var(--color-primary-light)]',\r\n  };\r\n\r\n  // Button sizes\r\n  const sizes = {\r\n    default: 'h-10 px-4 py-2',\r\n    sm: 'h-9 rounded-md px-3 text-sm',\r\n    lg: 'h-11 rounded-md px-8 text-lg',\r\n    icon: 'h-10 w-10',\r\n  };\r\n\r\n  // Base classes - enhanced with transitions and focus states\r\n  const baseClasses = 'relative inline-flex items-center justify-center rounded-md font-medium transition-all duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--color-primary)] focus-visible:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed shadow-[var(--shadow-sm)]';\r\n\r\n  return (\r\n    <button\r\n      className={`${baseClasses} ${variants[variant]} ${sizes[size]} ${className}`}\r\n      ref={ref}\r\n      disabled={isLoading || props.disabled}\r\n      {...props}\r\n    >\r\n      {isLoading && (\r\n        <span className=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2\">\r\n          <svg className=\"animate-spin h-5 w-5\" viewBox=\"0 0 24 24\">\r\n            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" fill=\"none\"></circle>\r\n            <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n          </svg>\r\n        </span>\r\n      )}\r\n      <span className={isLoading ? \"invisible\" : \"flex items-center gap-2\"}>\r\n        {startIcon && <span className=\"mr-1\">{startIcon}</span>}\r\n        {children}\r\n        {endIcon && <span className=\"ml-1\">{endIcon}</span>}\r\n      </span>\r\n    </button>\r\n  );\r\n});\r\n\r\nButton.displayName = 'Button';\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string,\r\n  variant: PropTypes.oneOf(['default', 'destructive', 'outline', 'secondary', 'accent', 'ghost', 'link']),\r\n  size: PropTypes.oneOf(['default', 'sm', 'lg', 'icon']),\r\n  children: PropTypes.node,\r\n  isLoading: PropTypes.bool,\r\n  startIcon: PropTypes.node,\r\n  endIcon: PropTypes.node,\r\n  gradient: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport { Button }; ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { motion } from 'framer-motion';\r\n\r\n/**\r\n * Card component for containing content with theme support\r\n */\r\nconst Card = ({ \r\n  className = '', \r\n  children, \r\n  variant = 'default',\r\n  isInteractive = false,\r\n  animate = false,\r\n  hoverEffect = 'shadow', // new prop: shadow, lift, glow, or none\r\n  ...props \r\n}) => {\r\n  const baseClasses = 'rounded-lg border transition-all duration-200';\r\n  \r\n  const variantClasses = {\r\n    default: 'bg-[var(--color-card-bg)] border-[var(--color-border)] shadow-[var(--shadow-sm)]',\r\n    primary: 'bg-gradient-to-br from-[var(--color-primary)] to-[var(--color-primary-dark)] border-[var(--color-primary)] text-white',\r\n    secondary: 'bg-gradient-to-br from-[var(--color-secondary)] to-[var(--color-secondary-dark)] border-[var(--color-secondary)] text-white',\r\n    accent: 'bg-gradient-to-br from-[var(--color-accent)] to-[var(--color-accent-dark)] border-[var(--color-accent)] text-white',\r\n    outline: 'bg-transparent border-[var(--color-border)] shadow-none',\r\n    ghost: 'border-none shadow-none bg-transparent',\r\n  };\r\n  \r\n  // Hover effect classes\r\n  const getHoverClasses = () => {\r\n    if (!isInteractive) return '';\r\n    \r\n    switch(hoverEffect) {\r\n      case 'shadow':\r\n        return 'hover:shadow-[var(--shadow-lg)] cursor-pointer';\r\n      case 'lift':\r\n        return 'hover:shadow-[var(--shadow-md)] hover:-translate-y-1 cursor-pointer';\r\n      case 'glow':\r\n        return 'hover:shadow-[0_0_15px_rgba(var(--color-primary-rgb),0.5)] cursor-pointer';\r\n      case 'none':\r\n      default:\r\n        return 'cursor-pointer';\r\n    }\r\n  };\r\n\r\n  const interactiveClasses = getHoverClasses();\r\n\r\n  const CardComponent = animate ? motion.div : 'div';\r\n  \r\n  const animationProps = animate ? {\r\n    initial: { opacity: 0, y: 10 },\r\n    animate: { opacity: 1, y: 0 },\r\n    transition: { duration: 0.3 }\r\n  } : {};\r\n    \r\n  return (\r\n    <CardComponent\r\n      className={`${baseClasses} ${variantClasses[variant]} ${interactiveClasses} ${className}`}\r\n      {...animationProps}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </CardComponent>\r\n  );\r\n};\r\n\r\n/**\r\n * CardHeader component for card headers with title and actions\r\n */\r\nconst CardHeader = ({ \r\n  className = '', \r\n  children, \r\n  title, \r\n  subtitle,\r\n  icon,\r\n  action,\r\n  gradient = false,\r\n  ...props \r\n}) => {\r\n  const titleClasses = gradient ? 'gradient-text' : '';\r\n  \r\n  return (\r\n    <div\r\n      className={`flex items-center justify-between p-6 pb-3 ${className}`}\r\n      {...props}\r\n    >\r\n      <div className=\"flex items-center space-x-4\">\r\n        {icon && <div className=\"text-[var(--color-primary)]\">{icon}</div>}\r\n        <div>\r\n          {title && <h3 className={`text-lg font-semibold ${titleClasses}`}>{title}</h3>}\r\n          {subtitle && <p className=\"text-sm text-[var(--text-secondary)]\">{subtitle}</p>}\r\n        </div>\r\n      </div>\r\n      {action && <div>{action}</div>}\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * CardContent component for padding content inside cards\r\n */\r\nconst CardContent = ({ className = '', children, ...props }) => {\r\n  return (\r\n    <div\r\n      className={`p-6 pt-3 text-[var(--text-primary)] ${className}`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * CardFooter component for card footers with actions\r\n */\r\nconst CardFooter = ({ className = '', children, ...props }) => {\r\n  return (\r\n    <div\r\n      className={`flex items-center justify-between p-6 pt-3 border-t border-[var(--color-border)] ${className}`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nCard.propTypes = {\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n  variant: PropTypes.oneOf(['default', 'primary', 'secondary', 'accent', 'outline', 'ghost']),\r\n  isInteractive: PropTypes.bool,\r\n  animate: PropTypes.bool,\r\n  hoverEffect: PropTypes.oneOf(['shadow', 'lift', 'glow', 'none']),\r\n};\r\n\r\nCardHeader.propTypes = {\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n  title: PropTypes.node,\r\n  subtitle: PropTypes.node,\r\n  icon: PropTypes.node,\r\n  action: PropTypes.node,\r\n  gradient: PropTypes.bool,\r\n};\r\n\r\nCardContent.propTypes = {\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nCardFooter.propTypes = {\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport { Card, CardHeader, CardContent, CardFooter }; ","import axios from 'axios';\r\n\r\nconst BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n/**\r\n * Centralized HTTP client for API requests\r\n * Includes interceptors for authentication, error handling, and request/response transformation\r\n */\r\nconst api = axios.create({\r\n  baseURL: BASE_URL,\r\n  timeout: 30000, // 30 seconds (increased from 10000)\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  config => {\r\n    // Use standardized 'authToken' key\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      // Remove excessive token logging\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  error => {\r\n    console.error('Request interceptor error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  response => response.data, // Extract data directly like http.js does\r\n  error => {\r\n    if (error.response) {\r\n      // Server responded with an error status code\r\n      const { status, data } = error.response;\r\n      \r\n      // Handle authentication errors\r\n      if (status === 401) {\r\n        // Token expired or invalid\r\n        localStorage.removeItem('authToken');\r\n        localStorage.removeItem('user');\r\n        window.location.href = '/login';\r\n      }\r\n      \r\n      // Log minimal error information\r\n      console.error(`API Error: ${status} - ${error.config?.url}`);\r\n      \r\n      // Return normalized error object like http.js does\r\n      return Promise.reject({\r\n        status,\r\n        message: data?.message || 'An error occurred',\r\n        errors: data?.errors || {},\r\n        data,\r\n      });\r\n    } else if (error.request) {\r\n      // Request was made but no response received\r\n      console.error('API Error: No response received');\r\n      \r\n      return Promise.reject({\r\n        status: 0,\r\n        message: 'No response received from server',\r\n        errors: {},\r\n      });\r\n    } else {\r\n      // Error in setting up the request\r\n      console.error('API Error: Request setup failed');\r\n      \r\n      return Promise.reject({\r\n        status: 0,\r\n        message: error.message || 'Request setup failed',\r\n        errors: {},\r\n      });\r\n    }\r\n  }\r\n);\r\n\r\n// API endpoints\r\nexport const authAPI = {\r\n  login: credentials => api.post('/auth/login', credentials).then(data => {\r\n    // Store token in localStorage\r\n    if (data.token) {\r\n      localStorage.setItem('authToken', data.token);\r\n      \r\n      // Store user data if available\r\n      if (data.user) {\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n      }\r\n    }\r\n    return data;\r\n  }),\r\n  register: userData => api.post('/auth/register', userData),\r\n  logout: () => {\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('user');\r\n    return api.post('/auth/logout');\r\n  },\r\n  getCurrentUser: () => api.get('/auth/me'),\r\n  isAuthenticated: () => !!localStorage.getItem('authToken'),\r\n  getStoredUser: () => {\r\n    const user = localStorage.getItem('user');\r\n    return user ? JSON.parse(user) : null;\r\n  },\r\n};\r\n\r\nexport const deliveryAPI = {\r\n  getAll: async (params) => {\r\n    try {\r\n      const response = await api.get('/deliveries', { params });\r\n      \r\n      // Handle both paginated and non-paginated responses\r\n      if (Array.isArray(response)) {\r\n        return {\r\n          docs: response,\r\n          totalDocs: response.length,\r\n          totalPages: 1,\r\n          page: 1\r\n        };\r\n      }\r\n      return response || { docs: [], totalDocs: 0, totalPages: 0, page: 1 };\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  getById: id => api.get(`/deliveries/${id}`),\r\n  create: async (data) => {\r\n    try {\r\n      // Check if auth token exists\r\n      const token = localStorage.getItem('authToken');\r\n      if (!token) {\r\n        throw new Error('Authentication required. Please log in.');\r\n      }\r\n      \r\n      return await api.post('/deliveries', data);\r\n    } catch (error) {\r\n      console.error('Error in deliveryAPI.create');\r\n      throw error;\r\n    }\r\n  },\r\n  update: (id, data) => api.put(`/deliveries/${id}`, data),\r\n  delete: async (id) => {\r\n    try {\r\n      if (!id) {\r\n        throw new Error('Delivery ID is required');\r\n      }\r\n      \r\n      return await api.delete(`/deliveries/${id}`);\r\n    } catch (error) {\r\n      console.error(`Error deleting delivery: ${error.message}`);\r\n      throw error;\r\n    }\r\n  },\r\n  updateStatus: (id, status) =>\r\n    api.patch(`/deliveries/${id}/status`, { status }),\r\n  assign: (id, delivererId) =>\r\n    api.patch(`/deliveries/${id}/assign`, { delivererId }),\r\n  getAvailable: () => api.get('/deliveries/available'),\r\n};\r\n\r\nexport const delivererAPI = {\r\n  getAll: async (params) => {\r\n    try {\r\n      const response = await api.get('/deliverers', { params });\r\n      // Handle both paginated and non-paginated responses\r\n      return response || [];\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  getById: id => api.get(`/deliverers/${id}`),\r\n  create: async (data) => {\r\n    try {\r\n      // Check if auth token exists\r\n      const token = localStorage.getItem('authToken');\r\n      if (!token) {\r\n        throw new Error('Authentication required. Please log in.');\r\n      }\r\n      \r\n      return await api.post('/deliverers', data);\r\n    } catch (error) {\r\n      console.error('Error in delivererAPI.create');\r\n      throw error;\r\n    }\r\n  },\r\n  update: async (id, data) => {\r\n    try {\r\n      const response = await api.put(`/deliverers/${id}`, data);\r\n      return response;\r\n    } catch (error) {\r\n      console.error(`Error in delivererAPI.update for ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  delete: id => api.delete(`/deliverers/${id}`),\r\n  getStats: (id, params) => api.get(`/deliverers/${id}/stats`, { params }),\r\n  updateStatus: (id, status) =>\r\n    api.patch(`/deliverers/${id}/status`, { status }),\r\n  assignDelivery: (id, deliveryId) =>\r\n    api.patch(`/deliverers/${id}/assign`, { deliveryId }),\r\n  getAvailableDeliveries: () => api.get('/deliveries/available'),\r\n};\r\n\r\nexport const userAPI = {\r\n  getAll: params => api.get('/users', { params }),\r\n  getProfile: async () => {\r\n    try {\r\n      // First try to get user from localStorage\r\n      const storedUser = localStorage.getItem('user');\r\n      \r\n      if (storedUser) {\r\n        const userData = JSON.parse(storedUser);\r\n        \r\n        // If we have a stored user, use it but also try to refresh from API\r\n        try {\r\n          // Try to get fresh data from API in the background\r\n          const response = await api.get('/users/profile');\r\n          \r\n          // If successful, update localStorage with fresh data\r\n          localStorage.setItem('user', JSON.stringify(response));\r\n          return response;\r\n        } catch (apiError) {\r\n          // If API call fails but we have stored user data, use the stored data\r\n          return userData;\r\n        }\r\n      }\r\n      \r\n      // If no stored user, check for token and try API call\r\n      const token = localStorage.getItem('authToken');\r\n      if (!token) {\r\n        throw new Error('Authentication required');\r\n      }\r\n      \r\n      // Make API call\r\n      const response = await api.get('/users/profile');\r\n      \r\n      // Store the fresh data\r\n      localStorage.setItem('user', JSON.stringify(response));\r\n      return response;\r\n    } catch (error) {\r\n      console.warn('Error fetching user profile');\r\n      throw error;\r\n    }\r\n  },\r\n  getById: id => api.get(`/users/${id}`),\r\n  updateProfile: data => api.put('/users/profile', data),\r\n  updateRole: (id, role) => api.put(`/users/${id}/role`, { role }),\r\n  changePassword: data => api.put('/users/change-password', data),\r\n  deactivate: id => api.put(`/users/${id}/deactivate`),\r\n  delete: id => api.delete(`/users/${id}`),\r\n};\r\n\r\n\r\n\r\nexport const jobsAPI = {\r\n  getStatus: async () => {\r\n    try {\r\n      const response = await api.get('/jobs/status');\r\n      \r\n      // Return null/empty response handling\r\n      if (!response) {\r\n        throw new Error('Empty response from jobs status API');\r\n      }\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error fetching jobs status');\r\n      \r\n      // Return fallback data on error to prevent UI crashes\r\n      return {\r\n        isRunning: false,\r\n        totalJobs: 0,\r\n        activeJobs: 0,\r\n        successRate: 0,\r\n        lastRun: null,\r\n        jobs: [],\r\n        systemHealth: { \r\n          status: 'unknown',\r\n          issuesCount: 0\r\n        },\r\n        recentRuns: []\r\n      };\r\n    }\r\n  },\r\n  getHealth: async () => {\r\n    try {\r\n      const response = await api.get('/jobs/health');\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error in jobsAPI.getHealth:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  getPerformance: async () => {\r\n    try {\r\n      const response = await api.get('/jobs/performance');\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error in jobsAPI.getPerformance:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  getDashboard: async () => {\r\n    try {\r\n      const response = await api.get('/jobs/dashboard');\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error in jobsAPI.getDashboard:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  runJob: async (jobName) => {\r\n    try {\r\n      const response = await api.post(`/jobs/run/${jobName}`);\r\n      return response;\r\n    } catch (error) {\r\n      console.error(`Error in jobsAPI.runJob for job ${jobName}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  startJob: async (jobName) => {\r\n    try {\r\n      const response = await api.post(`/jobs/run/${jobName}`);\r\n      return response;\r\n    } catch (error) {\r\n      console.error(`Error in jobsAPI.startJob for job ${jobName}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  stopJob: async (jobName) => {\r\n    try {\r\n      const response = await api.post(`/jobs/stop/${jobName}`);\r\n      return response;\r\n    } catch (error) {\r\n      console.error(`Error in jobsAPI.stopJob for job ${jobName}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  startAllJobs: async () => {\r\n    try {\r\n      const response = await api.post('/jobs/start');\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error in jobsAPI.startAllJobs:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  stopAllJobs: async () => {\r\n    try {\r\n      const response = await api.post('/jobs/stop');\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error in jobsAPI.stopAllJobs:', error);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default api;\r\n"],"names":["_ref","data","lines","xAxisDataKey","yAxisLabel","xAxisLabel","title","connectNulls","showGrid","className","defaultColors","linesWithColors","map","line","index","color","length","type","strokeWidth","dot","undefined","_jsxs","children","_jsx","ResponsiveContainer","width","height","RechartsLineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","opacity","XAxis","dataKey","label","value","position","offset","YAxis","angle","Tooltip","contentStyle","backgroundColor","borderRadius","boxShadow","border","Legend","Line","name","stroke","activeDot","r","nameKey","colors","donut","innerRadius","outerRadius","pieColors","RechartsPieChart","Pie","cx","cy","labelLine","_ref2","percent","toFixed","fill","entry","Cell","formatter","AnimatedStatCard","icon","delay","gradient","textColor","motion","div","initial","y","animate","transition","duration","PerformanceCard","trend","trendValue","ArrowUp","ArrowDown","DashboardOverview","t","useTranslation","stats","setStats","useState","loading","setLoading","error","setError","fetchDashboardData","async","console","log","deliveriesData","deliverersData","usersData","Promise","all","deliveryAPI","getAll","delivererAPI","userAPI","getProfile","catch","deliveriesArray","docs","delivered","filter","d","status","pending","inTransit","cancelled","byStatus","item","sevenDaysAgo","Date","setDate","getDate","dateMap","Map","forEach","delivery","date","createdAt","created_at","now","toISOString","split","has","set","completed","get","trendsArray","Array","from","values","sort","a","b","slice","totalDelivered","onTimeDeliveries","deliveredAt","delivered_at","expectedDeliveryDate","expected_delivery_date","onTimeRate","Math","round","userInfo","role","dashboardData","deliveries","total","failed","trends","deliverers","isArray","active","inactive","onDelivery","currentDelivery","current_delivery","users","admins","managers","operators","performance","onTimeDeliveryRate","averageDeliveryTime","customerSatisfaction","err","message","useEffect","handleRetry","AlertTriangle","Button","onClick","variant","RefreshCw","size","Package","Clock","CheckCircle","TrendingUp","Truck","Users","Card","CardHeader","subtitle","CardContent","LineChart","grid","animated","PieChart","React","ref","isLoading","startIcon","endIcon","props","variants","default","destructive","outline","secondary","accent","ghost","link","sm","lg","disabled","viewBox","displayName","isInteractive","hoverEffect","interactiveClasses","getHoverClasses","CardComponent","animationProps","primary","action","titleClasses","_ref3","api","axios","create","baseURL","process","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","reject","response","_error$config","removeItem","window","location","href","url","errors","authAPI","login","credentials","post","then","setItem","user","JSON","stringify","register","userData","logout","getCurrentUser","isAuthenticated","getStoredUser","parse","params","totalDocs","totalPages","page","getById","id","Error","update","put","delete","updateStatus","patch","assign","delivererId","getAvailable","getStats","assignDelivery","deliveryId","getAvailableDeliveries","storedUser","apiError","warn","updateProfile","updateRole","changePassword","deactivate","jobsAPI","getStatus","isRunning","totalJobs","activeJobs","successRate","lastRun","jobs","systemHealth","issuesCount","recentRuns","getHealth","getPerformance","getDashboard","runJob","jobName","startJob","stopJob","startAllJobs","stopAllJobs"],"sourceRoot":""}